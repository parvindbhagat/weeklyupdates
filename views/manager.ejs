<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Tasks</title>
  <link rel="stylesheet" href="https://use.typekit.net/oov2wcw.css" />
  <link
    href="https://cdn.jsdelivr.net/npm/remixicon@4.3.0/fonts/remixicon.css"
    rel="stylesheet"/>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link rel="stylesheet" href="/stylesheets/style.css">
  <style>
    #topButton {
            position: fixed;
            bottom: 20px;
            right: 30px;
            display: none;
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 5px;
        }
  </style>
</head>
<body>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
        window.activities = <%- JSON.stringify(tasks) %>;
        let tablediv = document.querySelector('.tablediv');
        const nothing = document.querySelector('.nothingToShow');
        console.log(activities.length);
        if (activities.length === 0) {
            tablediv.classList.add('hidden');
            nothing.classList.remove('hidden')
        } else {
            tablediv.classList.remove('hidden');            // Populate the table with activities
            nothing.classList.add('hidden');
        }
    });
</script>

<div class="content">
  <nav class="navbar">
    <a class="navbar-brand" href="/home">
      <img src="/images/logo.png" alt="Chrysalis" >
    </a>
  </nav>
  <h1 style=" margin-right: 3rem; text-align: center;">Welcome, <%= user.name %> </h1>
  <div class="d-flex flex-row-reverse gap-3">
    <form style="display: inline-block; margin-right: 3rem;" action="/logout" method="POST">
      <button type="submit" class="rounded">Logout</button>
    </form>
    <a class="me-3" href="/home">Home</a> 
    <a class="me-3" href="/profile">My Tasks</a>
  </div>
  
  <% if (msg) { %>
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <%= msg %>
        
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
            
    </div>  
  <% } %>
  
  <div class="nothingToShow hidden">
    <h3 style="text-align: center;">Nothing to Show! No task submitted by members of your team this week. Check back later.</h3>
  </div>
  
  <div class="tablediv mb-50 m-2 ">
    <!-- <div class="ms-3 my-3">
      <label for="resourceFilter">Filter by Resource Name:</label>
      <select id="resourceFilter" onchange="filterTable()">
        <option value="">All</option>
        <% 
          const uniqueResources = new Set();
          tasks.forEach(res => {
            uniqueResources.add(res.resourceName);
          });
          uniqueResources.forEach(manager => { 
        %>
          <option value="<%= manager %>"><%= manager %></option>
        <% }); %>
      </select>
    </div> -->
      <table class="table-striped full-width bg-white border border-gray-300" >
        <thead >
          <tr class="mx-2">
              <th  class="bg-warning mx-2">Project Name</th>
              <th  class="bg-warning mx-2">Task Name</th>
              <th  class="bg-warning mx-2">Planned Start</th>
              <th  class="bg-warning mx-2">Planned Finish</th>
              <th  class="bg-warning mx-2">Actual Start</th>
              <th  class="bg-warning mx-2">Actual Finish</th>            
              <th  class="bg-warning mx-2">Actual Work</th>
              <!-- <th  class="bg-warning mx-2">Submitted</th> -->
              <th  class="bg-warning mx-2">Complete</th>   
              <th  class="bg-warning mx-2">Comment</th>         
              <th  class="bg-warning mx-2">Status</th>
              <!-- <th  class="bg-warning">Action</th> -->
          </tr>
        </thead>
        <tbody>
          <% Object.keys(groupedMembers).forEach(resourceName => { %>
            <tr style="background-color: #e0e0e0 ; font-weight: bold; font-size: 1.5rem; position: sticky; top: 3rem;" class="resource-name-row">
              <td colspan="12"><%= resourceName %></td>
            </tr>
            <% let totalWork = 0; %>
            <% groupedMembers[resourceName].forEach(activity => { %>
            <tr class="tableData" id="<%= activity._id %>">
              <td class="border border-gray-300 px-1 py-1 "><%= activity.projectName %></td>
              <td class="border border-gray-300 px-1 py-1 "><%= activity.taskName %></td>
              <td class="border border-gray-300 px-1 py-1 "><%= new Date(activity.start).toLocaleDateString('en-in') %></td>
              <td class="border border-gray-300 px-1 py-1 "><%= new Date(activity.Finish).toLocaleDateString('en-in') %></td>
              <td class="border border-gray-300 px-1 py-1 "><%= activity.actualStart ? new Date(activity.actualStart).toLocaleDateString('en-in') : " " %></td>
              <td class="border border-gray-300 px-1 py-1 "><%= activity.actualFinish ? new Date(activity.actualFinish).toLocaleDateString('en-in') : " " %></td>
              <td class="border border-gray-300 px-1 py-1 "><%= activity.actualWork %></td>
              <!-- <td class="border border-gray-300 px-1 py-1 "><%= activity.submitted %></td> -->
              <td class="border border-gray-300 px-1 py-1 "><%= (activity.leapComplete < 100) ? "No" : "Yes" %></td>
              <td class="border border-gray-300 px-1 py-1 "><%= activity.userComment %></td>
              <td class="border border-gray-300 px-1 py-1 "><%= activity.approvalStatus %></td>
              <!-- <td class="text-center px-2"><button class="btn btn-primary update-btn border border-gray-300" data-id="<%= activity._id %>">Update</button></td> -->
              <% totalWork += parseFloat(activity.actualWork) || 0; %>
            </tr>          
          <% }); %>
          <tr style="background-color: #0dbeb0 ; font-weight: bold; color: white;" class="resource-name-row">
            <td colspan="8"> Total work by <%= resourceName %>: <%= totalWork %> Hrs.          </td>
            <td colspan="1"><button id="approveBtn" class="btn btn-primary approve-btn border border-gray-300" data-id="<%= resourceName %>" data-bs-toggle="tooltip" data-bs-placement="top" title="Approve all task entries and work done and Reassign Incomplete tasks.">Approve All</button></td>
            <td colspan="1"><button type="button" class="btn btn-primary reassign-all-btn" data-bs-toggle="modal" data-id="<%= resourceName %>" data-bs-target="#reassignModal"  data-bs-toggle="tooltip" data-bs-placement="top" title="Reassign all tasks to the member to make changes as per your Comment.">
              Reassign All
            </button></td>          
          </tr>
          <tr>
            <td colspan="10" style="color: white;">.  </td>          
          </tr>
          <% }); %>
        </tbody>
      </table>
  </div>
  
  <!--Reassign Modal -->
  <div class="modal fade" id="reassignModal" tabindex="-1" aria-labelledby="reassignModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="reassignModalLabel">Reassign all tasks for <span id="modalResourceName"></span>.</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="reassignForm">
            <p>Please enter a comment specifying reason for reassignment.</p>
            <div class="form-group">
              <label for="comment">Comment</label>
              <textarea class="form-control mb-3" id="comment" rows="3" required></textarea>
            </div>
            <button type="submit" id="reassignBtn" data-dismiss="modal" aria-label="Close" class="btn btn-primary reassign-btn close">Reassign</button>
          </form>
        </div>
      </div>
    </div>
  </div>
  <div class="nothing">
    
  </div>
  <div class="footer" >
    <h4 class="footext">That was all!  </h4>
    <!-- <p style=" text-align: center; position: relative; bottom: 1px;">Copyright Â© 2024  <a href="https://chrysalis.in" style="text-decoration: none;">Chrysalis HRD</a></p> -->
  </div>
</div>

<button id="topButton" onclick="scrollToTop()">TOP</button>
    <script>
        // Show the button when the user scrolls down 20px from the top of the document
        window.onscroll = function() {scrollFunction()};

        function scrollFunction() {
            if (document.body.scrollTop > 50 || document.documentElement.scrollTop > 50) {
                document.getElementById("topButton").style.display = "block";
            } else {
                document.getElementById("topButton").style.display = "none";
            }
        }
        // Scroll to the top of the document
        function scrollToTop() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
    </script>
  <!-- <pre><%= JSON.stringify(tasks, null, 2) %></pre> -->   
<!-- below script to approve all the completed tasks on for a member and make submitted = 2 for completed task and 0 for incomplete task -->
<script>
  document.querySelectorAll('.approve-btn').forEach(button => {
  button.addEventListener('click', function() {
    const resourceName = button.getAttribute('data-id');
    console.log("resource name fetched for this user approve btn click is: ", resourceName);
    fetch('/approve', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ resourceName: resourceName })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Optionally update the DOM or refresh the page
        window.location.reload();
        // alert('approve success');
      } else {
        console.error('Failed to process tasks:', data.message);
      }
    })
    .catch(error => console.error('Error:', error));
  });
});
</script>

<!-- // script for Reassign Modal comment and form submisstion -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
  // Initialize tooltips
  var tooltipElements = document.querySelectorAll('[data-toggle="tooltip"]');
  tooltipElements.forEach(function(elem) {
    new bootstrap.Tooltip(elem);
  });

  // When the modal is about to be shown
  var reassignModal = document.getElementById('reassignModal');
  reassignModal.addEventListener('show.bs.modal', function(event) {
    var button = event.relatedTarget; // Button that triggered the modal
    var resourceName = button.getAttribute('data-id'); // Extract info from data-* attributes
    var modalTitle = reassignModal.querySelector('.modal-title #modalResourceName');
    var reassignForm = reassignModal.querySelector('.modal-body #reassignForm');

    modalTitle.textContent = resourceName; // Update the modal's title
    reassignForm.dataset.resourceName = resourceName; // Store resourceName in form data
  });

  // Handle form submission
  var reassignForm = document.getElementById('reassignForm');
  reassignForm.addEventListener('submit', function(event) {
    event.preventDefault();
    var resourceName = reassignForm.dataset.resourceName;
    var comment = document.getElementById('comment').value;

    fetch('/reassign', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ resourceName: resourceName, comment: comment })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Optionally update the DOM or refresh the page
        window.location.reload();
      } else {
        console.error('Failed to reassign tasks:', data.message);
      }
    })
    .catch(error => console.error('Error:', error));
  });
});

</script>

<!-- Script to get date and hours  for each task for each user.  -->
<script>
const groupedMembers = <%- JSON.stringify(groupedMembers) %>
function parseComments(comments) {
  const dateHoursMap = {};

  // Split the comments by semicolon to handle multiple entries
  const entries = comments.split(';');

  entries.forEach(entry => {
    // Extract the date and hours using regex
    const match = entry.match(/\((\d{2}\/\d{2}\/\d{4}): (\d+) Hrs\)/);
    if (match) {
      const date = match[1];
      const hours = parseInt(match[2], 10);

      // Sum the hours if the date already exists
      if (dateHoursMap[date]) {
        dateHoursMap[date] += hours;
      } else {
        dateHoursMap[date] = hours;
      }
    }
  });

  return dateHoursMap;
}

function processTasks(groupedMembers) {
  const result = {};

  Object.keys(groupedMembers).forEach(resourceName => {
    result[resourceName] = {};

    groupedMembers[resourceName].forEach(activity => {
      const dateHours = parseComments(activity.userComment);
      result[resourceName][activity.taskName] = dateHours;
    });
  });

  return result;
}
const processedData = processTasks(groupedMembers);
console.log(processedData);

</script>

   <script src="/javascripts/bootstrap.bundle.min.js"></script>
</body>