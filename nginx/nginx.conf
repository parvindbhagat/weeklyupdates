# # Main context (this is the global configuration)
# worker_processes 1;

# events {
#     worker_connections 1024;
# }

# http {
#     include mime.types;

#     # Upstream block to define the Node.js backend servers
#     upstream nodejs_cluster {
#         server 127.0.0.1:5001;
#         server 127.0.0.1:5002;
#         server 127.0.0.1:5003;
#     }

#     server {
#         listen 443 ssl;  # Listen on port 443 for HTTPS
#         server_name localhost;

#         # SSL certificate settings
#         ssl_certificate /Users/nana/nginx-certs/nginx-selfsigned.crt;
#         ssl_certificate_key /Users/nana/nginx-certs/nginx-selfsigned.key;

#         # Proxying requests to Node.js cluster
#         location / {
#             proxy_pass http://nodejs_cluster;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#         }
#     }

#     # Optional server block for HTTP to HTTPS redirection
#     server {
#         listen 8080;  # Listen on port 80 for HTTP
#         server_name localhost;

#         # Redirect all HTTP traffic to HTTPS
#         location / {
#             return 301 https://$host$request_uri;
#         }
#     }
# }
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;

    # Upstream block to define the Node.js backend servers
    upstream nodejs_cluster {       
        hash $remote_addr$http_user_agent$http_cookie$http_x_forwarded_for consistent; #this will keep connection from an ip to same app server consistent on just one instance where it first landed.
        server app1:5000;
        server app2:5000;
        server app3:5000;        
    }

    server {
        listen 80;  # Listen on port 80 for HTTP
        server_name localhost;

        location / {
            proxy_pass http://nodejs_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}