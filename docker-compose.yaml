
services:
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: timesheet1
    # ports:
    #   - "5001:5000"
    depends_on:
      - mongo
    restart: always
    environment:
      - APP_NAME=app1
    env_file:
      - .env
    networks:
      - updates-network
 

  mongo:
    image: mongo:7.0.12
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password3479
    volumes:
      - mongo-data:/data/db
    networks:
      - updates-network


  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongo-express-updates
    ports:
      - "3000:8081"
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password3497
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/task_data?authSource=admin
      ME_CONFIG_BASICAUTH: true      
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: adminpassword8900
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
    depends_on:
      - mongo
    networks:
      - updates-network

  nginx:
    image: nginx:latest
    ports:
      - "5000:80"
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app1
      # - app2
      # - app3
    networks:
      - updates-network

volumes:
  mongo-data:


networks:
  updates-network:
